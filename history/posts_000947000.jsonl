{"id": "aaxLUGKikIgR8Sco8ngTjAUjJ_VLE4s3HejcDBjfJeg", "title": "从 Twitter 的突发新闻报道看草根记者的崛起", "body": "在几天前的“纽约客机哈德森河成功迫降”事件中，[Twitter](https://twitter.com/) 又一次拔得头筹（为什么说“又”捏？因为之前的孟买恐怖袭击，Twitter 已经抢先传统媒体了）。在率先到达出事地点的救生艇上，贾尼斯·克鲁姆斯同学（Janis Krums）用自己的 iPhone 手机拍摄了照片并上传到 Twitter，成为了飞机迫降后的首张现场照片。 \n \n\n![](https://lh6.googleusercontent.com/zPDZQ4P1hlNM1Yo4ksRmMQglUMdQc9eoxEbi-gcPU57A9zByWI1ebwUXlmnmF9-2UtVtxrWmfF4tevEsByvaMm4C54YPuH5Ad3b84hO1drxO2m2E9-ph0TuZAJBLWF7KgSZP-xus)\n\n \n 　　最近已经有好几次突发事件是由 Twitter 抢先报道，草根记者大有后来居上的势头。这主要得益于可拍照、可上网手机的普及和 SNS（社会化网络）的流行，使得大伙儿都可以成为爆料的记者。这方面的优势，传统媒体是很难超越的（毕竟电视台、报社、杂志的人手有限）。从目前的发展趋势看，将来传统媒体的优势将被局限在报道的【全面性】和【深入性】等方面，而不得不放弃“实时性”的优势。 \n\n**版权声明** \n 本博客所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者[编程随想](mailto:program.think@gmail.com)和本文原始地址： \n <https://program-think.blogspot.com/2009/01/twitter-and-break-news-and-people.html>", "timestamp": 1654270627, "digest": "8BUFbiiCt2sfkn7HQV5UbeAaT2z5hzHpv56vV3QRB0g", "contributor": "0xA282E330A4B90C14739CB3A8bc9939bB69dFb6d7"}
{"id": "AgjNPO98cNlT01_fpamufETvoG5vawSQro5_f_g36mU", "title": "PM2 常用命令", "body": "$ pm2 start app.js # 启动app.js应用程序\n$ pm2 start app.js -i 4 # cluster mode 模式启动4个app.js的应用实例\n\n$ pm2 start app.js --name=\"api\" # 启动应用程序并命名为 \"api\"\n$ pm2 start app.js --watch # 当文件变化时自动重启应用\n$ pm2 start [script.sh](http://script.sh) # 启动 bash 脚本\n\n$ pm2 list # 列表 PM2 启动的所有的应用程序\n$ pm2 monit # 显示每个应用程序的CPU和内存占用情况\n$ pm2 show \\[app-name\\] # 显示应用程序的所有信息\n\n$ pm2 logs # 显示所有应用程序的日志\n$ pm2 logs \\[app-name\\] # 显示指定应用程序的日志\npm2 flush\n\n$ pm2 stop all # 停止所有的应用程序\n$ pm2 stop 0 # 停止 id为 0的指定应用程序\n$ pm2 restart all # 重启所有应用\n$ pm2 reload all # 重启 cluster mode下的所有应用\n$ pm2 gracefulReload all # Graceful reload all apps in cluster mode\n$ pm2 delete all # 关闭并删除所有应用\n$ pm2 delete 0 # 删除指定应用 id 0\n$ pm2 scale api 10 # 把名字叫api的应用扩展到10个实例\n$ pm2 reset \\[app-name\\] # 重置重启数量\n\n$ pm2 startup # 创建开机自启动命令\n$ pm2 save # 保存当前应用列表\n$ pm2 resurrect # 重新加载保存的应用列表\n$ pm2 update # Save processes, kill PM2 and restore processes\n$ pm2 generate # Generate a sample json configuration file\npm2 start app.js --node-args=\"--max-old-space-size=1024\"", "timestamp": 1654270672, "digest": "9XSZcuXYqEav_ezTPUnxNB8BVZSym2wEgpk_fmeuTWg", "contributor": "0xc4eFF7Bd089A515355B23b0cd79Eb5EF08e6FEFE"}
{"id": "Grfm4jCy4i1tL1WVrureNOnfGhjdZBRMWk3k8tUvb-A", "title": "AVAX上的Liquid Staking协议BENQI", "body": " \n 策划：[@0xCryptoUni](https://twitter.com/0xCryptoUni)\n\n作者：[@qsxyx8888](https://twitter.com/qsxyx8888)\n\nBENQI Liquid Staking (BLS) 是一种基于 Avalanche 的液体质押协议。 它将质押的 AVAX 代币化，**（SAVAX）**并允许用户在去中心化金融 dApp 中自由使用它，例如自动做市商 (AMM)、借贷协议、收益聚合器等。 BLS 允许用户在 Avalanche C-Chain\\* 上质押 AVAX，而无需在 Avalanche P-Chain\\* 上质押。这允许用户从 P 链获得验证奖励，而无需运行完整节点或将 AVAX 锁定在验证节点上。\n\nBENQI Liquid Staking (BLS) 项目网站如下：\n\n[https://staking.benqi.fi/stake](https://staking.benqi.fi/stake)\n\nsAVAX 是用户在BENQI Liquid Staking (BLS) 上质押 AVAX 时收到的代币。它是质押 AVAX 的代币化版本，并通过 Avalanche 质押奖励产生利息。所以，savax：avax不断增加。类似于near生态中的质押协议stnear代币化，stnear：near。又或者terra生态（崩盘前）aust：ust。\n\n以下是near的相关介绍\n\n[https://mirror.xyz/luna8.eth/L1FDi8Al8T5YaYzJDnYqMm3gJzkaBI5XYAflJS2LfEc](https://mirror.xyz/luna8.eth/L1FDi8Al8T5YaYzJDnYqMm3gJzkaBI5XYAflJS2LfEc)\n\n![](https://images.mirror-media.xyz/publication-images/1a_wu6Uot-E7FaToJjNOg.png?height=3126&width=5556)\n\n**SAVAX代币合约地址：0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE**\n\n要想在AVAX中质押的朋友，不妨试试：\n\n在 BENQI Liquid Staking (BLS) 上质押 AVAX：\n\n1 .连接你的钱包\n\n2 .输入想要质押的 AVAX 数量\n\n3 .点击`Stake`\n\n4 .在同一个钱包中接收 sAVAX。\n\n![](https://images.mirror-media.xyz/publication-images/2q6Q6LgLcJb6_VftHfD8m.png?height=816&width=895)\n\n在 BLS 上质押 AVAX 有 15 天的取消质押冷却期。也就是说，取消质押需要15天， 对于 sAVAX 和 AVAX 之间的即时转换，也可以直接swap交易。在 15 天的取消质押请求期间，sAVAX仍在累积奖励。\n\n目前在 BENQI Liquid Staking 上质押和取消质押 AVAX**不收取任何费用。**\n\n**BENQI (QI) 代币**\n\nQI 是BENQI协议的治理代币。 该协议最初将由创始团队管理，最终将过渡到去中心化自治组织（DAO）。QI 的总供应量为 7,200,000,000 个代币。大部分代币将通过流动性挖矿计划分发。\n\n \n \n\n![](https://images.mirror-media.xyz/publication-images/bAk5zlN8C0Nr0f-f1Gsab.bmp?height=441&width=993)\n\n![benqi协议借贷市场利率2022。6.3](https://images.mirror-media.xyz/publication-images/43DXyxx7DS6xMWO6tXJdP.bmp?height=1000&width=1118)\n\n![2022.6.3存入avax年化回报，](https://images.mirror-media.xyz/publication-images/RlAUxfgaDRIk5BlaMjBBs.bmp?height=479&width=891)\n\n2022\\.6.3存入savax年化回报，有qi代币和avax代币两个部分构成。\n\n![](https://images.mirror-media.xyz/publication-images/a-11OwyroNPOydcWH7ffX.bmp?height=1103&width=1202)\n\n点开存入和借贷页面，选择savax，点开，会有供应量、借贷量、价格、当前利率供求关系，apy等数据。非常直观方便。\n\n以下是本人实操：\n\n1、avax在benqi协议质押，会得到savax，步骤略。\n\n2、将savax质押。\n\n![](https://images.mirror-media.xyz/publication-images/nTTimXIyRFDAjBTCi339t.bmp?height=976&width=1112)\n\n3、两次确认——批准+存入，交两次gas。费用很低。\n\n![](https://images.mirror-media.xyz/publication-images/NbIf5lCfsuw076EYBxyXb.bmp?height=603&width=897)\n\n4、选择存入资产作为抵押品\n\n![](https://images.mirror-media.xyz/publication-images/oDkVr_RW3d-pRYAdqo-oB.bmp?height=668&width=1305)\n\n![](https://images.mirror-media.xyz/publication-images/2QZ-z8ZXO2v0jjU2ZCvV1.bmp?height=1183&width=1136)\n\n存入完成，可以看到，存入价值，年化收益（利息）**APY有两个部分构成：avax+qi代币**。\n\n图上可以看到，savax抵押品系数为20%，意味着，当前价值499u的savax资产，只能借贷价值100u的资产。\n\n5、借贷\n\n![](https://images.mirror-media.xyz/publication-images/HM3ToJJqmsB6wC5yEfQf3.bmp?height=993&width=1082)\n\n如图所示，由于savax只有20%的系数，只能借出99.8%的usd资产。\n\n所以，像near生态那种，质押near——得stnear或linear——质押stnear或linear——借near——质押——反复借贷操作，在avax-savax并不适用。\n\n划重点：\n\n**借入的资产只要超过借贷限额20%，就会遭遇机器人清算。有些defi项目显示不清晰，实操时认为抵押品足够，第二天看到被清算的例子很多。这和交易所借币不一样。**", "timestamp": 1654270632, "digest": "yixKhnF6emp8O600p1VCc97NsHy8_nH32rCLYBl1aPo", "contributor": "0xDCd1f2b121F13C8cf5B1aaACaEFa2d2A416a9fC5"}
{"id": "zNG33hzSCsnoTdGvlvqvd6m7POb9Kciv3ZgWva949CY", "title": "C++ 的可移植性和跨平台开发[0]：概述", "body": "今天聊聊 C++ 的可移植性问题。如果你平时使用 C++ 进行开发，并且你对 C++ 的可移植性问题不是非常清楚，那么建议你看看这个系列。即使你目前没有跨平台开发的需要，了解可移植性方面的知识对你还是很有帮助的。\n　　C++ 的可移植性这个话题很大，包括了编译器、操作系统、硬件体系等很多方面，每一个方面都有很多内容。鉴于本人能力、精力都有限，只能介绍每一个方面最容易碰到的问题，供大伙儿参考。\n　　后面我会分别从编译器、C++ 语法、操作系统、第三方库、辅助工具、开发流程等方面进行介绍。\n\n为了方便阅读，把本系列帖子的目录整理如下：\n\n1. [编译器](https://program-think.blogspot.com/2009/01/cxx-cross-platform-develop-1-compiler.html)\n2. [语法](https://program-think.blogspot.com/2009/01/cxx-cross-platform-develop-2-language.html)\n3. [异常处理](https://program-think.blogspot.com/2009/01/cxx-cross-platform-develop-3-exception.html)\n4. [硬件体系](https://program-think.blogspot.com/2009/02/cxx-cross-platform-develop-5-os.html)\n5. [操作系统](https://program-think.blogspot.com/2009/02/cxx-cross-platform-develop-5-os.html)\n6. [多线程](https://program-think.blogspot.com/2009/04/cxx-cross-platform-develop-6-thread.html)\n7. （未完待续）\n\n俺博客上，和本文相关的帖子（需翻墙）：\n《[每周转载：IT 大牛谈编程语言（网文3篇](https://program-think.blogspot.com/2012/05/weekly-share-5.html)）》\n《[如何成为优秀开发人员](https://program-think.blogspot.com/2009/01/0.html)》（系列）\n\n**版权声明** 本博客所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者[编程随想](https://program.think@gmail.com)和本文原始地址：<https://program-think.blogspot.com/2009/01/cxx-cross-platform-develop-0-overview.html>", "timestamp": 1654270773, "digest": "lgnQdt-EHEh0AsJ_TIIol56Zs0hR5jUU4MHkXhbcKCM", "contributor": "0xA282E330A4B90C14739CB3A8bc9939bB69dFb6d7"}
